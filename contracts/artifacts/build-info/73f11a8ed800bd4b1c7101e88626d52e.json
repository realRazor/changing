{
	"id": "73f11a8ed800bd4b1c7101e88626d52e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n/** \n * @title Ballot\n * @dev Implements voting process along with vote delegation\n */\ncontract Ballot {\n\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    struct Proposal {\n        // If you can limit the length to a certain number of bytes, \n        // always use one of bytes1 to bytes32 because they are much cheaper\n        bytes32 name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    mapping(address => Voter) public voters;\n\n    Proposal[] public proposals;\n\n    /** \n     * @dev Create a new ballot to choose one of 'proposalNames'.\n     * @param proposalNames names of proposals\n     */\n    constructor(bytes32[] memory proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        for (uint i = 0; i < proposalNames.length; i++) {\n            // 'Proposal({...})' creates a temporary\n            // Proposal object and 'proposals.push(...)'\n            // appends it to the end of 'proposals'.\n            proposals.push(Proposal({\n                name: proposalNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n    /** \n     * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n     * @param voter address of voter\n     */\n    function giveRightToVote(address voter) public {\n        require(\n            msg.sender == chairperson,\n            \"Only chairperson can give right to vote.\"\n        );\n        require(\n            !voters[voter].voted,\n            \"The voter already voted.\"\n        );\n        require(voters[voter].weight == 0);\n        voters[voter].weight = 1;\n    }\n\n    /**\n     * @dev Delegate your vote to the voter 'to'.\n     * @param to address to which vote is delegated\n     */\n    function delegate(address to) public {\n        Voter storage sender = voters[msg.sender];\n        require(!sender.voted, \"You already voted.\");\n        require(to != msg.sender, \"Self-delegation is disallowed.\");\n\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender, \"Found loop in delegation.\");\n        }\n        sender.voted = true;\n        sender.delegate = to;\n        Voter storage delegate_ = voters[to];\n        if (delegate_.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate_.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate_.weight += sender.weight;\n        }\n    }\n\n    /**\n     * @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n     * @param proposal index of proposal in the proposals array\n     */\n    function vote(uint proposal) public {\n        Voter storage sender = voters[msg.sender];\n        require(sender.weight != 0, \"Has no right to vote\");\n        require(!sender.voted, \"Already voted.\");\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If 'proposal' is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /** \n     * @dev Computes the winning proposal taking all previous votes into account.\n     * @return winningProposal_ index of winning proposal in the proposals array\n     */\n    function winningProposal() public view\n            returns (uint winningProposal_)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal_ = p;\n            }\n        }\n    }\n\n    /** \n     * @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n     * @return winnerName_ the name of the winner\n     */\n    function winnerName() public view\n            returns (bytes32 winnerName_)\n    {\n        winnerName_ = proposals[winningProposal()].name;\n    }\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/3_Ballot.sol": {
				"Ballot": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "chairperson",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "delegate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "name",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "voteCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voters",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "voted",
									"type": "bool"
								},
								{
									"internalType": "address",
									"name": "delegate",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "vote",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winnerName",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "winnerName_",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal_",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implements voting process along with vote delegation",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Create a new ballot to choose one of 'proposalNames'.",
								"params": {
									"proposalNames": "names of proposals"
								}
							},
							"delegate(address)": {
								"details": "Delegate your vote to the voter 'to'.",
								"params": {
									"to": "address to which vote is delegated"
								}
							},
							"giveRightToVote(address)": {
								"details": "Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.",
								"params": {
									"voter": "address of voter"
								}
							},
							"vote(uint256)": {
								"details": "Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.",
								"params": {
									"proposal": "index of proposal in the proposals array"
								}
							},
							"winnerName()": {
								"details": "Calls winningProposal() function to get the index of the winner contained in the proposals array and then",
								"returns": {
									"winnerName_": "the name of the winner"
								}
							},
							"winningProposal()": {
								"details": "Computes the winning proposal taking all previous votes into account.",
								"returns": {
									"winningProposal_": "index of winning proposal in the proposals array"
								}
							}
						},
						"title": "Ballot",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/3_Ballot.sol\":955:1436  constructor(bytes32[] memory proposalNames) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/3_Ballot.sol\":1009:1020  chairperson */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  dup1\n  sload\n  not(sub(exp(0x02, 0xa0), 0x01))\n  and\n    /* \"contracts/3_Ballot.sol\":1023:1033  msg.sender */\n  caller\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/3_Ballot.sol\":1043:1062  voters[chairperson] */\n  dup2\n  mstore\n    /* \"contracts/3_Ballot.sol\":1009:1033  chairperson = msg.sender */\n  0x01\n    /* \"contracts/3_Ballot.sol\":1043:1062  voters[chairperson] */\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup3\n  keccak256\n    /* \"contracts/3_Ballot.sol\":1043:1073  voters[chairperson].weight = 1 */\n  sstore\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\ntag_6:\n    /* \"contracts/3_Ballot.sol\":1105:1118  proposalNames */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1105:1125  proposalNames.length */\n  mload\n    /* \"contracts/3_Ballot.sol\":1101:1102  i */\n  dup2\n    /* \"contracts/3_Ballot.sol\":1101:1125  i < proposalNames.length */\n  lt\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\n  iszero\n  tag_7\n  jumpi\n    /* \"contracts/3_Ballot.sol\":1309:1318  proposals */\n  0x02\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"contracts/3_Ballot.sol\":1357:1370  proposalNames */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1371:1372  i */\n  dup5\n    /* \"contracts/3_Ballot.sol\":1357:1373  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_10\n  jumpi\n  tag_10\n  tag_11\n  jump\t// in\ntag_10:\n  0x20\n  swap1\n  dup2\n  mul\n  swap2\n  swap1\n  swap2\n  add\n  dup2\n  add\n  mload\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  dup3\n  mstore\n    /* \"contracts/3_Ballot.sol\":1402:1403  0 */\n  0x00\n    /* \"contracts/3_Ballot.sol\":1324:1418  Proposal({... */\n  swap2\n  dup2\n  add\n  dup3\n  swap1\n  mstore\n    /* \"contracts/3_Ballot.sol\":1309:1419  proposals.push(Proposal({... */\n  dup4\n  sload\n  0x01\n  dup2\n  dup2\n  add\n  dup7\n  sstore\n  swap5\n  dup4\n  mstore\n  swap2\n  dup2\n  swap1\n  keccak256\n  dup4\n  mload\n  0x02\n  swap1\n  swap4\n  mul\n  add\n  swap2\n  dup3\n  sstore\n  swap2\n  swap1\n  swap2\n  add\n  mload\n  swap2\n  add\n  sstore\n    /* \"contracts/3_Ballot.sol\":1127:1130  i++ */\n  dup1\n  tag_13\n  dup2\n  tag_14\n  jump\t// in\ntag_13:\n  swap2\n  pop\n  pop\n    /* \"contracts/3_Ballot.sol\":1084:1430  for (uint i = 0; i < proposalNames.length; i++) {... */\n  jump(tag_6)\ntag_7:\n  pop\n    /* \"contracts/3_Ballot.sol\":955:1436  constructor(bytes32[] memory proposalNames) {... */\n  pop\n    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:1131   */\ntag_3:\n    /* \"#utility.yul\":109:115   */\n  0x00\n    /* \"#utility.yul\":140:142   */\n  0x20\n    /* \"#utility.yul\":183:185   */\n  dup1\n    /* \"#utility.yul\":171:180   */\n  dup4\n    /* \"#utility.yul\":162:169   */\n  dup6\n    /* \"#utility.yul\":158:181   */\n  sub\n    /* \"#utility.yul\":154:186   */\n  slt\n    /* \"#utility.yul\":151:203   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":199:200   */\n  0x00\n    /* \"#utility.yul\":196:197   */\n  dup1\n    /* \"#utility.yul\":189:201   */\n  revert\n    /* \"#utility.yul\":151:203   */\ntag_18:\n    /* \"#utility.yul\":232:241   */\n  dup3\n    /* \"#utility.yul\":226:242   */\n  mload\n    /* \"#utility.yul\":261:279   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":302:304   */\n  dup1\n    /* \"#utility.yul\":294:300   */\n  dup3\n    /* \"#utility.yul\":291:305   */\n  gt\n    /* \"#utility.yul\":288:322   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":315:316   */\n  dup1\n    /* \"#utility.yul\":308:320   */\n  revert\n    /* \"#utility.yul\":288:322   */\ntag_19:\n    /* \"#utility.yul\":356:362   */\n  dup2\n    /* \"#utility.yul\":345:354   */\n  dup6\n    /* \"#utility.yul\":341:363   */\n  add\n    /* \"#utility.yul\":331:363   */\n  swap2\n  pop\n    /* \"#utility.yul\":401:408   */\n  dup6\n    /* \"#utility.yul\":394:398   */\n  0x1f\n    /* \"#utility.yul\":390:392   */\n  dup4\n    /* \"#utility.yul\":386:399   */\n  add\n    /* \"#utility.yul\":382:409   */\n  slt\n    /* \"#utility.yul\":372:427   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":423:424   */\n  0x00\n    /* \"#utility.yul\":420:421   */\n  dup1\n    /* \"#utility.yul\":413:425   */\n  revert\n    /* \"#utility.yul\":372:427   */\ntag_20:\n    /* \"#utility.yul\":452:454   */\n  dup2\n    /* \"#utility.yul\":446:455   */\n  mload\n    /* \"#utility.yul\":474:476   */\n  dup2\n    /* \"#utility.yul\":470:472   */\n  dup2\n    /* \"#utility.yul\":467:477   */\n  gt\n    /* \"#utility.yul\":464:500   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":480:498   */\n  tag_22\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":527:529   */\n  dup4\n    /* \"#utility.yul\":523:525   */\n  dup2\n    /* \"#utility.yul\":519:530   */\n  mul\n    /* \"#utility.yul\":559:561   */\n  0x40\n    /* \"#utility.yul\":553:562   */\n  mload\n    /* \"#utility.yul\":622:624   */\n  0x1f\n    /* \"#utility.yul\":618:625   */\n  not\n    /* \"#utility.yul\":613:615   */\n  0x3f\n    /* \"#utility.yul\":609:611   */\n  dup4\n    /* \"#utility.yul\":605:616   */\n  add\n    /* \"#utility.yul\":601:626   */\n  and\n    /* \"#utility.yul\":593:599   */\n  dup2\n    /* \"#utility.yul\":589:627   */\n  add\n    /* \"#utility.yul\":677:683   */\n  dup2\n    /* \"#utility.yul\":665:675   */\n  dup2\n    /* \"#utility.yul\":662:684   */\n  lt\n    /* \"#utility.yul\":657:659   */\n  dup6\n    /* \"#utility.yul\":645:655   */\n  dup3\n    /* \"#utility.yul\":642:660   */\n  gt\n    /* \"#utility.yul\":639:685   */\n  or\n    /* \"#utility.yul\":636:708   */\n  iszero\n  tag_25\n  jumpi\n    /* \"#utility.yul\":688:706   */\n  tag_25\n  tag_23\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":724:726   */\n  0x40\n    /* \"#utility.yul\":717:739   */\n  mstore\n    /* \"#utility.yul\":774:792   */\n  dup3\n  dup2\n  mstore\n    /* \"#utility.yul\":808:823   */\n  dup6\n  dup2\n  add\n  swap4\n  pop\n    /* \"#utility.yul\":843:854   */\n  dup5\n  dup7\n  add\n    /* \"#utility.yul\":873:884   */\n  dup3\n  dup7\n  add\n    /* \"#utility.yul\":869:889   */\n  dup8\n  add\n    /* \"#utility.yul\":866:899   */\n  dup11\n  lt\n    /* \"#utility.yul\":863:916   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":912:913   */\n  0x00\n    /* \"#utility.yul\":909:910   */\n  dup1\n    /* \"#utility.yul\":902:914   */\n  revert\n    /* \"#utility.yul\":863:916   */\ntag_26:\n    /* \"#utility.yul\":934:935   */\n  0x00\n    /* \"#utility.yul\":925:935   */\n  swap6\n  pop\n    /* \"#utility.yul\":944:1100   */\ntag_27:\n    /* \"#utility.yul\":958:960   */\n  dup4\n    /* \"#utility.yul\":955:956   */\n  dup7\n    /* \"#utility.yul\":952:961   */\n  lt\n    /* \"#utility.yul\":944:1100   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1015:1025   */\n  dup1\n  mload\n    /* \"#utility.yul\":1003:1026   */\n  dup6\n  mstore\n    /* \"#utility.yul\":976:977   */\n  0x01\n    /* \"#utility.yul\":969:978   */\n  swap6\n  swap1\n  swap6\n  add\n  swap5\n    /* \"#utility.yul\":1046:1058   */\n  swap4\n  dup7\n  add\n  swap4\n    /* \"#utility.yul\":1078:1090   */\n  dup7\n  add\n    /* \"#utility.yul\":944:1100   */\n  jump(tag_27)\ntag_29:\n  pop\n    /* \"#utility.yul\":1119:1125   */\n  swap9\n    /* \"#utility.yul\":14:1131   */\n  swap8\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1136:1425   */\ntag_14:\n    /* \"#utility.yul\":1175:1178   */\n  0x00\n  not(0x00)\n    /* \"#utility.yul\":1196:1213   */\n  dup3\n  eq\n    /* \"#utility.yul\":1193:1390   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1246:1323   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1243:1244   */\n  0x00\n    /* \"#utility.yul\":1236:1324   */\n  mstore\n    /* \"#utility.yul\":1347:1351   */\n  0x11\n    /* \"#utility.yul\":1344:1345   */\n  0x04\n    /* \"#utility.yul\":1337:1352   */\n  mstore\n    /* \"#utility.yul\":1375:1379   */\n  0x24\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1365:1380   */\n  revert\n    /* \"#utility.yul\":1193:1390   */\ntag_31:\n  pop\n    /* \"#utility.yul\":1417:1418   */\n  0x01\n    /* \"#utility.yul\":1406:1419   */\n  add\n  swap1\n    /* \"#utility.yul\":1136:1425   */\n  jump\t// out\n    /* \"#utility.yul\":1430:1614   */\ntag_11:\n    /* \"#utility.yul\":1482:1559   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1479:1480   */\n  0x00\n    /* \"#utility.yul\":1472:1560   */\n  mstore\n    /* \"#utility.yul\":1579:1583   */\n  0x32\n    /* \"#utility.yul\":1576:1577   */\n  0x04\n    /* \"#utility.yul\":1569:1584   */\n  mstore\n    /* \"#utility.yul\":1603:1607   */\n  0x24\n    /* \"#utility.yul\":1600:1601   */\n  0x00\n    /* \"#utility.yul\":1593:1608   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_23:\n    /* \"#utility.yul\":1671:1748   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1668:1669   */\n  0x00\n    /* \"#utility.yul\":1661:1749   */\n  mstore\n    /* \"#utility.yul\":1768:1772   */\n  0x41\n    /* \"#utility.yul\":1765:1766   */\n  0x04\n    /* \"#utility.yul\":1758:1773   */\n  mstore\n    /* \"#utility.yul\":1792:1796   */\n  0x24\n    /* \"#utility.yul\":1789:1790   */\n  0x00\n    /* \"#utility.yul\":1782:1797   */\n  revert\n    /* \"#utility.yul\":1619:1803   */\ntag_16:\n    /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/3_Ballot.sol\":157:4512  contract Ballot {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x609ff1bd\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa3ec138d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe2ba53f0\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x013cf08b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e4176cf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c19a95c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_4:\n      tag_16\n      tag_17\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1100:1125   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1141:1159   */\n      dup4\n      add\n        /* \"#utility.yul\":1134:1168   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1073:1091   */\n      add\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/3_Ballot.sol\":712:738  address public chairperson */\n    tag_5:\n      sload(0x00)\n      tag_21\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      dup2\n      jump\n    tag_21:\n      mload(0x40)\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":677:732   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":659:733   */\n      dup2\n      mstore\n        /* \"#utility.yul\":647:649   */\n      0x20\n        /* \"#utility.yul\":632:650   */\n      add\n        /* \"contracts/3_Ballot.sol\":712:738  address public chairperson */\n      tag_19\n        /* \"#utility.yul\":513:739   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n    tag_6:\n      tag_12\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":890:915   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":878:880   */\n      0x20\n        /* \"#utility.yul\":863:881   */\n      add\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n      tag_19\n        /* \"#utility.yul\":744:921   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n    tag_8:\n      tag_12\n      tag_34\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":745:784  mapping(address => Voter) public voters */\n    tag_9:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_37:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      dup3\n      and\n      swap2\n      0x0100\n      swap1\n      div\n      sub(exp(0x02, 0xa0), 0x01)\n      and\n      swap1\n      dup5\n      jump\n    tag_36:\n      mload(0x40)\n      tag_19\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":4100:4125   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":4168:4182   */\n      swap2\n      iszero\n        /* \"#utility.yul\":4161:4183   */\n      iszero\n        /* \"#utility.yul\":4156:4158   */\n      0x20\n        /* \"#utility.yul\":4141:4159   */\n      dup5\n      add\n        /* \"#utility.yul\":4134:4184   */\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":4220:4275   */\n      and\n        /* \"#utility.yul\":4215:4217   */\n      0x40\n        /* \"#utility.yul\":4200:4218   */\n      dup4\n      add\n        /* \"#utility.yul\":4193:4276   */\n      mstore\n        /* \"#utility.yul\":4307:4309   */\n      0x60\n        /* \"#utility.yul\":4292:4310   */\n      dup3\n      add\n        /* \"#utility.yul\":4285:4319   */\n      mstore\n        /* \"#utility.yul\":4087:4090   */\n      0x80\n        /* \"#utility.yul\":4072:4091   */\n      add\n      swap1\n        /* \"#utility.yul\":3875:4325   */\n      jump\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n    tag_10:\n      tag_29\n      tag_42\n      jump\t// in\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n    tag_15:\n        /* \"contracts/3_Ballot.sol\":3242:3252  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":3212:3232  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":3235:3253  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":3235:3241  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3235:3253  voters[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":3271:3284  sender.weight */\n      dup1\n      sload\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1381:1383   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1363:1384   */\n      mstore\n        /* \"#utility.yul\":1420:1422   */\n      0x14\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1393:1423   */\n      mstore\n        /* \"#utility.yul\":1459:1481   */\n      0x486173206e6f20726967687420746f20766f7465000000000000000000000000\n        /* \"#utility.yul\":1439:1457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1432:1482   */\n      mstore\n        /* \"#utility.yul\":1499:1517   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3263:3314  require(sender.weight != 0, \"Has no right to vote\") */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/3_Ballot.sol\":3333:3345  sender.voted */\n      0x01\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":3332:3345  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":1730:1732   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1712:1733   */\n      mstore\n        /* \"#utility.yul\":1769:1771   */\n      0x0e\n        /* \"#utility.yul\":1749:1767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1742:1772   */\n      mstore\n        /* \"#utility.yul\":1808:1824   */\n      0x416c726561647920766f7465642e000000000000000000000000000000000000\n        /* \"#utility.yul\":1788:1806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1781:1825   */\n      mstore\n        /* \"#utility.yul\":1842:1860   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n      tag_47\n        /* \"#utility.yul\":1528:1866   */\n      jump\n        /* \"contracts/3_Ballot.sol\":3324:3364  require(!sender.voted, \"Already voted.\") */\n    tag_49:\n        /* \"contracts/3_Ballot.sol\":3389:3393  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":3374:3386  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":3374:3393  sender.voted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3403:3414  sender.vote */\n      0x02\n      dup1\n      dup3\n      add\n        /* \"contracts/3_Ballot.sol\":3403:3425  sender.vote = proposal */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/3_Ballot.sol\":3604:3617  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3571:3590  proposals[proposal] */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":3604:3617  sender.weight */\n      swap1\n      swap2\n        /* \"contracts/3_Ballot.sol\":3403:3414  sender.vote */\n      swap1\n        /* \"contracts/3_Ballot.sol\":3417:3425  proposal */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":3571:3590  proposals[proposal] */\n      dup2\n      lt\n      tag_53\n      jumpi\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":3571:3600  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":3571:3617  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3166:3624  function vote(uint proposal) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":791:818  Proposal[] public proposals */\n    tag_18:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x02\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap1\n      swap2\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n    tag_28:\n        /* \"contracts/3_Ballot.sol\":2148:2158  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2118:2138  Voter storage sender */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2141:2159  voters[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2141:2147  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2141:2159  voters[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2178:2190  sender.voted */\n      swap1\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":2177:2190  !sender.voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2073:2075   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2055:2076   */\n      mstore\n        /* \"#utility.yul\":2112:2114   */\n      0x12\n        /* \"#utility.yul\":2092:2110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2085:2115   */\n      mstore\n        /* \"#utility.yul\":2151:2171   */\n      0x596f7520616c726561647920766f7465642e0000000000000000000000000000\n        /* \"#utility.yul\":2131:2149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2124:2172   */\n      mstore\n        /* \"#utility.yul\":2189:2207   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n      tag_47\n        /* \"#utility.yul\":1871:2213   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2169:2213  require(!sender.voted, \"You already voted.\") */\n    tag_61:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":2231:2247  to != msg.sender */\n      dup3\n      and\n        /* \"contracts/3_Ballot.sol\":2237:2247  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2231:2247  to != msg.sender */\n      eq\n      iszero\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3536:3538   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3518:3539   */\n      mstore\n        /* \"#utility.yul\":3575:3577   */\n      0x1e\n        /* \"#utility.yul\":3555:3573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3548:3578   */\n      mstore\n        /* \"#utility.yul\":3614:3646   */\n      0x53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e0000\n        /* \"#utility.yul\":3594:3612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3587:3647   */\n      mstore\n        /* \"#utility.yul\":3664:3682   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n      tag_47\n        /* \"#utility.yul\":3334:3688   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2223:2282  require(to != msg.sender, \"Self-delegation is disallowed.\") */\n    tag_64:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      dup3\n      dup2\n      and\n        /* \"contracts/3_Ballot.sol\":2331:2332  0 */\n      0x00\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2300:2306  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2300:2310  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2300:2319  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      and\n        /* \"contracts/3_Ballot.sol\":2300:2333  voters[to].delegate != address(0) */\n      iszero\n        /* \"contracts/3_Ballot.sol\":2293:2516  while (voters[to].delegate != address(0)) {... */\n      tag_68\n      jumpi\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":2354:2364  voters[to] */\n      swap2\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":2354:2360  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2354:2364  voters[to] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2354:2373  voters[to].delegate */\n      add\n      sload\n      0x0100\n      swap1\n      div\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/3_Ballot.sol\":2465:2475  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":2459:2475  to != msg.sender */\n      dup3\n      eq\n      iszero\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2829:2831   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2811:2832   */\n      mstore\n        /* \"#utility.yul\":2868:2870   */\n      0x19\n        /* \"#utility.yul\":2848:2866   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2841:2871   */\n      mstore\n        /* \"#utility.yul\":2907:2934   */\n      0x466f756e64206c6f6f7020696e2064656c65676174696f6e2e00000000000000\n        /* \"#utility.yul\":2887:2905   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2880:2935   */\n      mstore\n        /* \"#utility.yul\":2952:2970   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n      tag_47\n        /* \"#utility.yul\":2627:2976   */\n      jump\n        /* \"contracts/3_Ballot.sol\":2451:2505  require(to != msg.sender, \"Found loop in delegation.\") */\n    tag_69:\n        /* \"contracts/3_Ballot.sol\":2293:2516  while (voters[to].delegate != address(0)) {... */\n      jump(tag_64)\n    tag_68:\n        /* \"contracts/3_Ballot.sol\":2540:2544  true */\n      0x01\n        /* \"contracts/3_Ballot.sol\":2525:2537  sender.voted */\n      dup2\n      dup2\n      add\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      dup1\n      sload\n      not(0xffffffffffffffffffffffffffffffffffffffffff)\n        /* \"contracts/3_Ballot.sol\":2554:2574  sender.delegate = to */\n      and\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      0x0100\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":2554:2574  sender.delegate = to */\n      dup7\n      and\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      dup4\n      or\n      swap1\n      swap2\n      sstore\n      0x00\n        /* \"contracts/3_Ballot.sol\":2610:2620  voters[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup3\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":2634:2649  delegate_.voted */\n      swap1\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2525:2544  sender.voted = true */\n      0xff\n        /* \"contracts/3_Ballot.sol\":2634:2649  delegate_.voted */\n      and\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/3_Ballot.sol\":2801:2814  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2762:2771  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":2772:2786  delegate_.vote */\n      dup3\n      dup2\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":2762:2787  proposals[delegate_.vote] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_74\n      tag_54\n      jump\t// in\n    tag_74:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":2762:2797  proposals[delegate_.vote].voteCount */\n      0x01\n      add\n      0x00\n        /* \"contracts/3_Ballot.sol\":2762:2814  proposals[delegate_.vote].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      tag_76\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_76:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n      tag_77\n      swap1\n      pop\n      jump\n    tag_72:\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      dup2\n      sload\n        /* \"contracts/3_Ballot.sol\":2928:2937  delegate_ */\n      dup3\n      swap1\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      0x00\n      swap1\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      tag_78\n      swap1\n        /* \"contracts/3_Ballot.sol\":2948:2961  sender.weight */\n      dup5\n      swap1\n        /* \"contracts/3_Ballot.sol\":2928:2961  delegate_.weight += sender.weight */\n      tag_57\n      jump\t// in\n    tag_78:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2630:2972  if (delegate_.voted) {... */\n    tag_77:\n        /* \"contracts/3_Ballot.sol\":2108:2978  {... */\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":2071:2978  function delegate(address to) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n    tag_30:\n        /* \"contracts/3_Ballot.sol\":3870:3891  uint winningProposal_ */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n    tag_80:\n        /* \"contracts/3_Ballot.sol\":3963:3972  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":3963:3979  proposals.length */\n      sload\n        /* \"contracts/3_Ballot.sol\":3959:3979  p < proposals.length */\n      dup2\n      lt\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4029:4045  winningVoteCount */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4004:4013  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4014:4015  p */\n      dup3\n        /* \"contracts/3_Ballot.sol\":4004:4016  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_84\n      jumpi\n      tag_84\n      tag_54\n      jump\t// in\n    tag_84:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4004:4026  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4004:4045  proposals[p].voteCount > winningVoteCount */\n      gt\n        /* \"contracts/3_Ballot.sol\":4000:4159  if (proposals[p].voteCount > winningVoteCount) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"contracts/3_Ballot.sol\":4084:4093  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4094:4095  p */\n      dup2\n        /* \"contracts/3_Ballot.sol\":4084:4096  proposals[p] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      tag_88\n      tag_54\n      jump\t// in\n    tag_88:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4084:4106  proposals[p].voteCount */\n      0x01\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4065:4106  winningVoteCount = proposals[p].voteCount */\n      swap2\n      pop\n        /* \"contracts/3_Ballot.sol\":4143:4144  p */\n      dup1\n        /* \"contracts/3_Ballot.sol\":4124:4144  winningProposal_ = p */\n      swap3\n      pop\n        /* \"contracts/3_Ballot.sol\":4000:4159  if (proposals[p].voteCount > winningVoteCount) {... */\n    tag_86:\n        /* \"contracts/3_Ballot.sol\":3981:3984  p++ */\n      dup1\n      tag_90\n      dup2\n      tag_91\n      jump\t// in\n    tag_90:\n      swap2\n      pop\n      pop\n        /* \"contracts/3_Ballot.sol\":3942:4169  for (uint p = 0; p < proposals.length; p++) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"contracts/3_Ballot.sol\":3897:4175  {... */\n      pop\n        /* \"contracts/3_Ballot.sol\":3810:4175  function winningProposal() public view... */\n      swap1\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n    tag_35:\n        /* \"contracts/3_Ballot.sol\":1684:1695  chairperson */\n      and(sub(exp(0x02, 0xa0), 0x01), sload(0x00))\n        /* \"contracts/3_Ballot.sol\":1670:1680  msg.sender */\n      caller\n        /* \"contracts/3_Ballot.sol\":1670:1695  msg.sender == chairperson */\n      eq\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      tag_93\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2420:2422   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2402:2423   */\n      mstore\n        /* \"#utility.yul\":2459:2461   */\n      0x28\n        /* \"#utility.yul\":2439:2457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2432:2462   */\n      mstore\n        /* \"#utility.yul\":2498:2532   */\n      0x4f6e6c79206368616972706572736f6e2063616e206769766520726967687420\n        /* \"#utility.yul\":2478:2496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2471:2533   */\n      mstore\n        /* \"#utility.yul\":2569:2579   */\n      0x746f20766f74652e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2549:2567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2542:2580   */\n      mstore\n        /* \"#utility.yul\":2597:2616   */\n      0x84\n      add\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n      tag_47\n        /* \"#utility.yul\":2218:2622   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1649:1761  require(... */\n    tag_93:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1793:1806  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1793:1799  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1793:1806  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1793:1812  voters[voter].voted */\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/3_Ballot.sol\":1792:1812  !voters[voter].voted */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      tag_96\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3183:3185   */\n      0x20\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3165:3186   */\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x18\n        /* \"#utility.yul\":3202:3220   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3195:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3287   */\n      0x54686520766f74657220616c726561647920766f7465642e0000000000000000\n        /* \"#utility.yul\":3241:3259   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3234:3288   */\n      mstore\n        /* \"#utility.yul\":3305:3323   */\n      0x64\n      add\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n      tag_47\n        /* \"#utility.yul\":2981:3329   */\n      jump\n        /* \"contracts/3_Ballot.sol\":1771:1862  require(... */\n    tag_96:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1880:1893  voters[voter] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1880:1886  voters */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1880:1893  voters[voter] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1880:1900  voters[voter].weight */\n      sload\n        /* \"contracts/3_Ballot.sol\":1880:1905  voters[voter].weight == 0 */\n      iszero\n        /* \"contracts/3_Ballot.sol\":1872:1906  require(voters[voter].weight == 0) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"contracts/3_Ballot.sol\":1916:1929  voters[voter] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/3_Ballot.sol\":1939:1940  1 */\n      0x01\n        /* \"contracts/3_Ballot.sol\":1916:1929  voters[voter] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/3_Ballot.sol\":1916:1940  voters[voter].weight = 1 */\n      sstore\n        /* \"contracts/3_Ballot.sol\":1592:1947  function giveRightToVote(address voter) public {... */\n      jump\t// out\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n    tag_42:\n        /* \"contracts/3_Ballot.sol\":4421:4440  bytes32 winnerName_ */\n      0x00\n        /* \"contracts/3_Ballot.sol\":4470:4479  proposals */\n      0x02\n        /* \"contracts/3_Ballot.sol\":4480:4497  winningProposal() */\n      tag_101\n        /* \"contracts/3_Ballot.sol\":4480:4495  winningProposal */\n      tag_30\n        /* \"contracts/3_Ballot.sol\":4480:4497  winningProposal() */\n      jump\t// in\n    tag_101:\n        /* \"contracts/3_Ballot.sol\":4470:4498  proposals[winningProposal()] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_103\n      tag_54\n      jump\t// in\n    tag_103:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/3_Ballot.sol\":4470:4503  proposals[winningProposal()].name */\n      0x00\n      add\n      sload\n        /* \"contracts/3_Ballot.sol\":4456:4503  winnerName_ = proposals[winningProposal()].name */\n      swap1\n      pop\n        /* \"contracts/3_Ballot.sol\":4366:4510  function winnerName() public view... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:323   */\n    tag_27:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_107:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":220:274   */\n      and\n        /* \"#utility.yul\":213:218   */\n      dup2\n        /* \"#utility.yul\":210:275   */\n      eq\n        /* \"#utility.yul\":200:293   */\n      tag_108\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":200:293   */\n    tag_108:\n        /* \"#utility.yul\":312:317   */\n      swap4\n        /* \"#utility.yul\":14:323   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":328:508   */\n    tag_14:\n        /* \"#utility.yul\":387:393   */\n      0x00\n        /* \"#utility.yul\":440:442   */\n      0x20\n        /* \"#utility.yul\":428:437   */\n      dup3\n        /* \"#utility.yul\":419:426   */\n      dup5\n        /* \"#utility.yul\":415:438   */\n      sub\n        /* \"#utility.yul\":411:443   */\n      slt\n        /* \"#utility.yul\":408:460   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":456:457   */\n      0x00\n        /* \"#utility.yul\":453:454   */\n      dup1\n        /* \"#utility.yul\":446:458   */\n      revert\n        /* \"#utility.yul\":408:460   */\n    tag_110:\n      pop\n        /* \"#utility.yul\":479:502   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":328:508   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4330:4458   */\n    tag_57:\n        /* \"#utility.yul\":4370:4373   */\n      0x00\n        /* \"#utility.yul\":4401:4402   */\n      dup3\n        /* \"#utility.yul\":4397:4403   */\n      not\n        /* \"#utility.yul\":4394:4395   */\n      dup3\n        /* \"#utility.yul\":4391:4404   */\n      gt\n        /* \"#utility.yul\":4388:4427   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":4407:4425   */\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      pop\n        /* \"#utility.yul\":4443:4452   */\n      add\n      swap1\n        /* \"#utility.yul\":4330:4458   */\n      jump\t// out\n        /* \"#utility.yul\":4463:4598   */\n    tag_91:\n        /* \"#utility.yul\":4502:4505   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":4523:4540   */\n      dup3\n      eq\n        /* \"#utility.yul\":4520:4563   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":4543:4561   */\n      tag_129\n      tag_126\n      jump\t// in\n    tag_129:\n      pop\n        /* \"#utility.yul\":4590:4591   */\n      0x01\n        /* \"#utility.yul\":4579:4592   */\n      add\n      swap1\n        /* \"#utility.yul\":4463:4598   */\n      jump\t// out\n        /* \"#utility.yul\":4603:4787   */\n    tag_126:\n        /* \"#utility.yul\":4655:4732   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4652:4653   */\n      0x00\n        /* \"#utility.yul\":4645:4733   */\n      mstore\n        /* \"#utility.yul\":4752:4756   */\n      0x11\n        /* \"#utility.yul\":4749:4750   */\n      0x04\n        /* \"#utility.yul\":4742:4757   */\n      mstore\n        /* \"#utility.yul\":4776:4780   */\n      0x24\n        /* \"#utility.yul\":4773:4774   */\n      0x00\n        /* \"#utility.yul\":4766:4781   */\n      revert\n        /* \"#utility.yul\":4792:4976   */\n    tag_54:\n        /* \"#utility.yul\":4844:4921   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4841:4842   */\n      0x00\n        /* \"#utility.yul\":4834:4922   */\n      mstore\n        /* \"#utility.yul\":4941:4945   */\n      0x32\n        /* \"#utility.yul\":4938:4939   */\n      0x04\n        /* \"#utility.yul\":4931:4946   */\n      mstore\n        /* \"#utility.yul\":4965:4969   */\n      0x24\n        /* \"#utility.yul\":4962:4963   */\n      0x00\n        /* \"#utility.yul\":4955:4970   */\n      revert\n\n    auxdata: 0xa26469706673582212205ab13ac14009a63047c0adc52725bb73b1a757400aff0507cc6644e984412ca164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_71": {
									"entryPoint": null,
									"id": 71,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 513,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1805:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "120:1011:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "130:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "140:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "134:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "158:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "183:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "154:32:1"
															},
															"nodeType": "YulIf",
															"src": "151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "212:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "232:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "251:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "261:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "255:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "306:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "315:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "318:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "294:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "302:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "291:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:14:1"
															},
															"nodeType": "YulIf",
															"src": "288:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "331:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "345:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "356:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "335:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "411:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "420:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "423:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "413:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "413:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "413:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "390:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "394:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "386:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:35:1"
															},
															"nodeType": "YulIf",
															"src": "372:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "436:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "452:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "440:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "478:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "480:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "480:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "480:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "470:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "474:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "467:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "467:10:1"
															},
															"nodeType": "YulIf",
															"src": "464:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "509:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "523:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "527:2:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:11:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "513:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "539:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "559:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "553:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "543:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "571:56:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "593:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "609:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "613:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "605:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "605:11:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "622:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "618:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "618:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "601:25:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:38:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "575:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "686:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "688:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "688:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "688:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "645:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "657:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "642:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "642:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "665:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "677:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "662:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "639:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "639:46:1"
															},
															"nodeType": "YulIf",
															"src": "636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "728:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:22:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "748:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "759:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "752:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "781:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "789:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "774:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "774:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "801:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "820:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "808:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "808:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "832:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "847:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "851:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "836:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "900:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "902:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "877:2:1"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "881:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "873:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "873:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "886:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "891:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "866:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:33:1"
															},
															"nodeType": "YulIf",
															"src": "863:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "925:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "934:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "929:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "989:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1010:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1021:3:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1015:10:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1003:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1003:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1003:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1039:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1055:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1046:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1046:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1039:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1071:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1082:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1087:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1078:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1071:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "955:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "958:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "962:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "964:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "973:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "969:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "969:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "964:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "948:3:1",
																"statements": []
															},
															"src": "944:156:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1109:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1119:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "86:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "97:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"src": "14:1117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1183:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1246:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1236:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1236:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1236:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1344:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1347:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1199:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1210:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1206:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1196:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:17:1"
															},
															"nodeType": "YulIf",
															"src": "1193:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1410:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "1399:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1165:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1136:289:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1462:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1579:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1569:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1569:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1569:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1600:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1593:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1593:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1651:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1768:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1792:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1782:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1619:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := mul(_4, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, _5), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := memPtr\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a62380380610a6283398101604081905261002f916100cc565b60008054600160a060020a03191633908117825581526001602081905260408220555b81518110156100c5576002604051806040016040528084848151811061007a5761007a6101d2565b602090810291909101810151825260009181018290528354600181810186559483529181902083516002909302019182559190910151910155806100bd81610190565b915050610052565b5050610230565b600060208083850312156100df57600080fd5b825167ffffffffffffffff808211156100f757600080fd5b818501915085601f83011261010b57600080fd5b81518181111561011d5761011d610201565b838102604051601f19603f8301168101818110858211171561014157610141610201565b604052828152858101935084860182860187018a101561016057600080fd5b600095505b83861015610183578051855260019590950194938601938601610165565b5098975050505050505050565b60006000198214156101cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108238061023f6000396000f3fe608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063609ff1bd11610078578063609ff1bd1461012a5780639e7b8d6114610140578063a3ec138d14610153578063e2ba53f0146101c457600080fd5b80630121b93f146100aa578063013cf08b146100bf5780632e4176cf146100ec5780635c19a95c14610117575b600080fd5b6100bd6100b8366004610743565b6101cc565b005b6100d26100cd366004610743565b6102e1565b604080519283526020830191909152015b60405180910390f35b6000546100ff90600160a060020a031681565b604051600160a060020a0390911681526020016100e3565b6100bd610125366004610713565b61030f565b610132610530565b6040519081526020016100e3565b6100bd61014e366004610713565b6105ad565b610195610161366004610713565b600160208190526000918252604090912080549181015460029091015460ff8216916101009004600160a060020a03169084565b6040516100e394939291909384529115156020840152600160a060020a03166040830152606082015260800190565b6101326106e0565b33600090815260016020526040902080546102315760405160e560020a62461bcd02815260206004820152601460248201527f486173206e6f20726967687420746f20766f746500000000000000000000000060448201526064015b60405180910390fd5b600181015460ff16156102895760405160e560020a62461bcd02815260206004820152600e60248201527f416c726561647920766f7465642e0000000000000000000000000000000000006044820152606401610228565b6001818101805460ff19169091179055600280820183905581548154909190849081106102b8576102b86107be565b906000526020600020906002020160010160008282546102d8919061075c565b90915550505050565b600281815481106102f157600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103785760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610228565b600160a060020a0382163314156103d45760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610228565b600160a060020a03828116600090815260016020819052604090912001546101009004161561047c57600160a060020a0391821660009081526001602081905260409091200154610100900490911690338214156104775760405160e560020a62461bcd02815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610228565b6103d4565b6001818101805474ffffffffffffffffffffffffffffffffffffffffff1916610100600160a060020a03861690810291909117831790915560009081526020829052604090209081015460ff1615610511578154600282810154815481106104e6576104e66107be565b90600052602060002090600202016001016000828254610506919061075c565b9091555061052b9050565b81548154829060009061052590849061075c565b90915550505b505050565b600080805b6002548110156105a8578160028281548110610553576105536107be565b9060005260206000209060020201600101541115610596576002818154811061057e5761057e6107be565b90600052602060002090600202016001015491508092505b806105a081610774565b915050610535565b505090565b600054600160a060020a031633146106305760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610228565b600160a060020a0381166000908152600160208190526040909120015460ff16156106a05760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610228565b600160a060020a038116600090815260016020526040902054156106c357600080fd5b600160a060020a0316600090815260016020819052604090912055565b600060026106ec610530565b815481106106fc576106fc6107be565b906000526020600020906002020160000154905090565b60006020828403121561072557600080fd5b8135600160a060020a038116811461073c57600080fd5b9392505050565b60006020828403121561075557600080fd5b5035919050565b6000821982111561076f5761076f61078f565b500190565b60006000198214156107885761078861078f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205ab13ac14009a63047c0adc52725bb73b1a757400aff0507cc6644e984412ca164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA62 CODESIZE SUB DUP1 PUSH2 0xA62 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SSTORE JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xC5 JUMPI PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7A JUMPI PUSH2 0x7A PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 MSTORE PUSH1 0x0 SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP7 SSTORE SWAP5 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0xBD DUP2 PUSH2 0x190 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x52 JUMP JUMPDEST POP POP PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x11D JUMPI PUSH2 0x11D PUSH2 0x201 JUMP JUMPDEST DUP4 DUP2 MUL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x141 JUMPI PUSH2 0x141 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP6 DUP2 ADD SWAP4 POP DUP5 DUP7 ADD DUP3 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x183 JUMPI DUP1 MLOAD DUP6 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP7 ADD SWAP4 DUP7 ADD PUSH2 0x165 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1CB JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x823 DUP1 PUSH2 0x23F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x609FF1BD GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFF SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x132 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x195 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x6E0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486173206E6F20726967687420746F20766F7465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F7465642E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2B8 JUMPI PUSH2 0x2B8 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x47C JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x511 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4E6 JUMPI PUSH2 0x4E6 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x52B SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x525 SWAP1 DUP5 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5A8 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x553 JUMPI PUSH2 0x553 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x5A0 DUP2 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6EC PUSH2 0x530 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6FC JUMPI PUSH2 0x6FC PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x76F JUMPI PUSH2 0x76F PUSH2 0x78F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x78F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB1 GASPRICE 0xC1 BLOCKHASH MULMOD 0xA6 ADDRESS SELFBALANCE 0xC0 0xAD 0xC5 0x27 0x25 0xBB PUSH20 0xB1A757400AFF0507CC6644E984412CA164736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "157:4355:0:-:0;;;955:481;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1009:11;:24;;-1:-1:-1;;;;;;1009:24:0;1023:10;1009:24;;;;;1043:19;;1009:24;1043:19;;;;;;;:30;1084:346;1105:13;:20;1101:1;:24;1084:346;;;1309:9;1324:94;;;;;;;;1357:13;1371:1;1357:16;;;;;;;;:::i;:::-;;;;;;;;;;;;1324:94;;1402:1;1324:94;;;;;;1309:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1127:3;;;;:::i;:::-;;;;1084:346;;;;955:481;157:4355;;14:1117:1;109:6;140:2;183;171:9;162:7;158:23;154:32;151:52;;;199:1;196;189:12;151:52;232:9;226:16;261:18;302:2;294:6;291:14;288:34;;;318:1;315;308:12;288:34;356:6;345:9;341:22;331:32;;401:7;394:4;390:2;386:13;382:27;372:55;;423:1;420;413:12;372:55;452:2;446:9;474:2;470;467:10;464:36;;;480:18;;:::i;:::-;527:2;523;519:11;559:2;553:9;622:2;618:7;613:2;609;605:11;601:25;593:6;589:38;677:6;665:10;662:22;657:2;645:10;642:18;639:46;636:72;;;688:18;;:::i;:::-;724:2;717:22;774:18;;;808:15;;;;-1:-1:-1;843:11:1;;;873;;;869:20;;866:33;-1:-1:-1;863:53:1;;;912:1;909;902:12;863:53;934:1;925:10;;944:156;958:2;955:1;952:9;944:156;;;1015:10;;1003:23;;976:1;969:9;;;;;1046:12;;;;1078;;944:156;;;-1:-1:-1;1119:6:1;14:1117;-1:-1:-1;;;;;;;;14:1117:1:o;1136:289::-;1175:3;-1:-1:-1;;1196:17:1;;1193:197;;;1246:77;1243:1;1236:88;1347:4;1344:1;1337:15;1375:4;1372:1;1365:15;1193:197;-1:-1:-1;1417:1:1;1406:13;;1136:289::o;1430:184::-;1482:77;1479:1;1472:88;1579:4;1576:1;1569:15;1603:4;1600:1;1593:15;1619:184;1671:77;1668:1;1661:88;1768:4;1765:1;1758:15;1792:4;1789:1;1782:15;1619:184;157:4355:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@chairperson_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@delegate_207": {
									"entryPoint": 783,
									"id": 207,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@giveRightToVote_111": {
									"entryPoint": 1453,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@proposals_27": {
									"entryPoint": 737,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_257": {
									"entryPoint": 460,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@voters_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winnerName_315": {
									"entryPoint": 1760,
									"id": 315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@winningProposal_300": {
									"entryPoint": 1328,
									"id": 300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4978:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:239:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "231:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "220:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "210:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "203:73:1"
															},
															"nodeType": "YulIf",
															"src": "200:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "302:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "312:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "398:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "446:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "446:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "415:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:32:1"
															},
															"nodeType": "YulIf",
															"src": "408:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "469:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "492:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "479:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "479:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "469:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "375:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "387:6:1",
														"type": ""
													}
												],
												"src": "328:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "614:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "624:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "636:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "647:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "624:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "666:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "681:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "689:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "659:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "659:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "659:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "583:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "594:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "605:4:1",
														"type": ""
													}
												],
												"src": "513:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "845:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "855:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "867:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "863:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "855:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "814:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "825:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "836:4:1",
														"type": ""
													}
												],
												"src": "744:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1055:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1065:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1077:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1088:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1073:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1065:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1107:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1100:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1141:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1161:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1134:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1016:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1027:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1035:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1046:4:1",
														"type": ""
													}
												],
												"src": "926:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1353:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1363:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1363:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1415:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1420:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1393:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1454:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1439:18:1"
																	},
																	{
																		"hexValue": "486173206e6f20726967687420746f20766f7465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1459:22:1",
																		"type": "",
																		"value": "Has no right to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1432:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1330:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1344:4:1",
														"type": ""
													}
												],
												"src": "1179:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1730:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1712:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1749:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1742:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1803:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:18:1"
																	},
																	{
																		"hexValue": "416c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1808:16:1",
																		"type": "",
																		"value": "Already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1781:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1781:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1834:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1846:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1842:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1842:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1834:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1679:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1693:4:1",
														"type": ""
													}
												],
												"src": "1528:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2045:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2062:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2073:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2055:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2055:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2107:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2092:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2085:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2146:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2131:18:1"
																	},
																	{
																		"hexValue": "596f7520616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2151:20:1",
																		"type": "",
																		"value": "You already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2181:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2189:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2181:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2022:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2036:4:1",
														"type": ""
													}
												],
												"src": "1871:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2392:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2454:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2439:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2459:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2432:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2482:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2493:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2478:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2498:34:1",
																		"type": "",
																		"value": "Only chairperson can give right "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2471:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2471:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2564:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:18:1"
																	},
																	{
																		"hexValue": "746f20766f74652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2569:10:1",
																		"type": "",
																		"value": "to vote."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2542:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2589:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2612:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2589:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2369:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2383:4:1",
														"type": ""
													}
												],
												"src": "2218:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2801:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2818:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2829:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2811:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2811:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2852:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2848:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2868:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2902:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:18:1"
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2907:27:1",
																		"type": "",
																		"value": "Found loop in delegation."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2880:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2880:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2880:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2956:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2967:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2952:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2944:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2778:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2792:4:1",
														"type": ""
													}
												],
												"src": "2627:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3155:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3172:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3183:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3165:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3165:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3206:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3217:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3195:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3195:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:1"
																	},
																	{
																		"hexValue": "54686520766f74657220616c726561647920766f7465642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3261:26:1",
																		"type": "",
																		"value": "The voter already voted."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3297:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3309:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3305:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3297:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3132:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3146:4:1",
														"type": ""
													}
												],
												"src": "2981:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3508:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3575:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3548:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3598:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3609:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3594:18:1"
																	},
																	{
																		"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3614:32:1",
																		"type": "",
																		"value": "Self-delegation is disallowed."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3587:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3587:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3656:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3668:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3679:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3664:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3664:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3656:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3499:4:1",
														"type": ""
													}
												],
												"src": "3334:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3794:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3804:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3816:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3827:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3812:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3804:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3846:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3857:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3839:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3839:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3839:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3763:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3774:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3785:4:1",
														"type": ""
													}
												],
												"src": "3693:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4054:271:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4064:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4072:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4064:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4107:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4118:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4100:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4100:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4145:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4156:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4141:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4141:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "4175:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4168:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4168:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4161:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4215:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4232:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4220:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:83:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4193:83:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4296:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4307:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4292:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4312:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4285:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4285:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3999:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4010:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4018:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4026:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4034:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4045:4:1",
														"type": ""
													}
												],
												"src": "3875:450:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4378:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4405:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4407:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4407:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4407:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4394:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4401:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4397:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4397:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4391:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:13:1"
															},
															"nodeType": "YulIf",
															"src": "4388:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4436:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4447:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4450:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4436:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4361:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4364:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4370:3:1",
														"type": ""
													}
												],
												"src": "4330:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4510:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4541:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4543:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4543:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4543:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4526:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4537:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4533:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4523:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:17:1"
															},
															"nodeType": "YulIf",
															"src": "4520:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4572:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4583:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4590:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4579:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4579:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4572:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4492:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4502:3:1",
														"type": ""
													}
												],
												"src": "4463:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4635:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4655:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4645:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4645:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4749:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4752:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4742:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4773:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4776:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4766:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4766:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4603:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4824:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4841:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4844:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4834:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4834:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4834:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4938:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4931:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4965:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4955:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4955:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "4792:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Has no right to vote\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"You already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only chairperson can give right \")\n        mstore(add(headStart, 96), \"to vote.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Found loop in delegation.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"The voter already voted.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Self-delegation is disallowed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_bool_t_address_t_uint256__to_t_uint256_t_bool_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063609ff1bd11610078578063609ff1bd1461012a5780639e7b8d6114610140578063a3ec138d14610153578063e2ba53f0146101c457600080fd5b80630121b93f146100aa578063013cf08b146100bf5780632e4176cf146100ec5780635c19a95c14610117575b600080fd5b6100bd6100b8366004610743565b6101cc565b005b6100d26100cd366004610743565b6102e1565b604080519283526020830191909152015b60405180910390f35b6000546100ff90600160a060020a031681565b604051600160a060020a0390911681526020016100e3565b6100bd610125366004610713565b61030f565b610132610530565b6040519081526020016100e3565b6100bd61014e366004610713565b6105ad565b610195610161366004610713565b600160208190526000918252604090912080549181015460029091015460ff8216916101009004600160a060020a03169084565b6040516100e394939291909384529115156020840152600160a060020a03166040830152606082015260800190565b6101326106e0565b33600090815260016020526040902080546102315760405160e560020a62461bcd02815260206004820152601460248201527f486173206e6f20726967687420746f20766f746500000000000000000000000060448201526064015b60405180910390fd5b600181015460ff16156102895760405160e560020a62461bcd02815260206004820152600e60248201527f416c726561647920766f7465642e0000000000000000000000000000000000006044820152606401610228565b6001818101805460ff19169091179055600280820183905581548154909190849081106102b8576102b86107be565b906000526020600020906002020160010160008282546102d8919061075c565b90915550505050565b600281815481106102f157600080fd5b60009182526020909120600290910201805460019091015490915082565b3360009081526001602081905260409091209081015460ff16156103785760405160e560020a62461bcd02815260206004820152601260248201527f596f7520616c726561647920766f7465642e00000000000000000000000000006044820152606401610228565b600160a060020a0382163314156103d45760405160e560020a62461bcd02815260206004820152601e60248201527f53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e00006044820152606401610228565b600160a060020a03828116600090815260016020819052604090912001546101009004161561047c57600160a060020a0391821660009081526001602081905260409091200154610100900490911690338214156104775760405160e560020a62461bcd02815260206004820152601960248201527f466f756e64206c6f6f7020696e2064656c65676174696f6e2e000000000000006044820152606401610228565b6103d4565b6001818101805474ffffffffffffffffffffffffffffffffffffffffff1916610100600160a060020a03861690810291909117831790915560009081526020829052604090209081015460ff1615610511578154600282810154815481106104e6576104e66107be565b90600052602060002090600202016001016000828254610506919061075c565b9091555061052b9050565b81548154829060009061052590849061075c565b90915550505b505050565b600080805b6002548110156105a8578160028281548110610553576105536107be565b9060005260206000209060020201600101541115610596576002818154811061057e5761057e6107be565b90600052602060002090600202016001015491508092505b806105a081610774565b915050610535565b505090565b600054600160a060020a031633146106305760405160e560020a62461bcd02815260206004820152602860248201527f4f6e6c79206368616972706572736f6e2063616e20676976652072696768742060448201527f746f20766f74652e0000000000000000000000000000000000000000000000006064820152608401610228565b600160a060020a0381166000908152600160208190526040909120015460ff16156106a05760405160e560020a62461bcd02815260206004820152601860248201527f54686520766f74657220616c726561647920766f7465642e00000000000000006044820152606401610228565b600160a060020a038116600090815260016020526040902054156106c357600080fd5b600160a060020a0316600090815260016020819052604090912055565b600060026106ec610530565b815481106106fc576106fc6107be565b906000526020600020906002020160000154905090565b60006020828403121561072557600080fd5b8135600160a060020a038116811461073c57600080fd5b9392505050565b60006020828403121561075557600080fd5b5035919050565b6000821982111561076f5761076f61078f565b500190565b60006000198214156107885761078861078f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205ab13ac14009a63047c0adc52725bb73b1a757400aff0507cc6644e984412ca164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x609FF1BD GT PUSH2 0x78 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xE2BA53F0 EQ PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x121B93F EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x13CF08B EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x2E4176CF EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x5C19A95C EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD2 PUSH2 0xCD CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xFF SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x125 CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x30F JUMP JUMPDEST PUSH2 0x132 PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST PUSH2 0x195 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE SWAP2 ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x132 PUSH2 0x6E0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x231 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486173206E6F20726967687420746F20766F7465000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x289 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C726561647920766F7465642E000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP3 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD DUP2 SLOAD SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x2B8 JUMPI PUSH2 0x2B8 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP2 POP DUP3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520616C726561647920766F7465642E0000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV AND ISZERO PUSH2 0x47C JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH2 0x100 SWAP1 DIV SWAP1 SWAP2 AND SWAP1 CALLER DUP3 EQ ISZERO PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 ADD DUP1 SLOAD PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH2 0x100 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x511 JUMPI DUP2 SLOAD PUSH1 0x2 DUP3 DUP2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x4E6 JUMPI PUSH2 0x4E6 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x52B SWAP1 POP JUMP JUMPDEST DUP2 SLOAD DUP2 SLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x525 SWAP1 DUP5 SWAP1 PUSH2 0x75C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x5A8 JUMPI DUP2 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x553 JUMPI PUSH2 0x553 PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x596 JUMPI PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x57E JUMPI PUSH2 0x57E PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 PUSH2 0x5A0 DUP2 PUSH2 0x774 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x535 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x630 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206368616972706572736F6E2063616E206769766520726967687420 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F20766F74652E000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520766F74657220616C726561647920766F7465642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x228 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH2 0x6EC PUSH2 0x530 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x6FC JUMPI PUSH2 0x6FC PUSH2 0x7BE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x73C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x76F JUMPI PUSH2 0x76F PUSH2 0x78F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x788 JUMPI PUSH2 0x788 PUSH2 0x78F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB1 GASPRICE 0xC1 BLOCKHASH MULMOD 0xA6 ADDRESS SELFBALANCE 0xC0 0xAD 0xC5 0x27 0x25 0xBB PUSH20 0xB1A757400AFF0507CC6644E984412CA164736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "157:4355:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3166:458;;;;;;:::i;:::-;;:::i;:::-;;791:27;;;;;;:::i;:::-;;:::i;:::-;;;;1100:25:1;;;1156:2;1141:18;;1134:34;;;;1073:18;791:27:0;;;;;;;;712:26;;;;;-1:-1:-1;;;;;712:26:0;;;;;;-1:-1:-1;;;;;677:55:1;;;659:74;;647:2;632:18;712:26:0;513:226:1;2071:907:0;;;;;;:::i;:::-;;:::i;3810:365::-;;;:::i;:::-;;;890:25:1;;;878:2;863:18;3810:365:0;744:177:1;1592:355:0;;;;;;:::i;:::-;;:::i;745:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;745:39:0;;;;;;;;;;;;;4100:25:1;;;4168:14;;4161:22;4156:2;4141:18;;4134:50;-1:-1:-1;;;;;4220:55:1;4215:2;4200:18;;4193:83;4307:2;4292:18;;4285:34;4087:3;4072:19;;3875:450;4366:144:0;;;:::i;3166:458::-;3242:10;3212:20;3235:18;;;:6;:18;;;;;3271:13;;3263:51;;;;-1:-1:-1;;;;;3263:51:0;;1381:2:1;3263:51:0;;;1363:21:1;1420:2;1400:18;;;1393:30;1459:22;1439:18;;;1432:50;1499:18;;3263:51:0;;;;;;;;;3333:12;;;;;;3332:13;3324:40;;;;-1:-1:-1;;;;;3324:40:0;;1730:2:1;3324:40:0;;;1712:21:1;1769:2;1749:18;;;1742:30;1808:16;1788:18;;;1781:44;1842:18;;3324:40:0;1528:338:1;3324:40:0;3389:4;3374:12;;;:19;;-1:-1:-1;;3374:19:0;;;;;;3403:11;;;;:22;;;3604:13;;3571:19;;3604:13;;3403:11;3417:8;;3571:19;;;;;;:::i;:::-;;;;;;;;;;;:29;;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3166:458:0:o;791:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;791:27:0;:::o;2071:907::-;2148:10;2118:20;2141:18;;;:6;:18;;;;;;;;2178:12;;;;;;2177:13;2169:44;;;;-1:-1:-1;;;;;2169:44:0;;2073:2:1;2169:44:0;;;2055:21:1;2112:2;2092:18;;;2085:30;2151:20;2131:18;;;2124:48;2189:18;;2169:44:0;1871:342:1;2169:44:0;-1:-1:-1;;;;;2231:16:0;;2237:10;2231:16;;2223:59;;;;-1:-1:-1;;;;;2223:59:0;;3536:2:1;2223:59:0;;;3518:21:1;3575:2;3555:18;;;3548:30;3614:32;3594:18;;;3587:60;3664:18;;2223:59:0;3334:354:1;2223:59:0;-1:-1:-1;;;;;2300:10:0;;;2331:1;2300:10;;;:6;:10;;;;;;;;:19;;;;;;:33;2293:223;;-1:-1:-1;;;;;2354:10:0;;;;;;;:6;:10;;;;;;;;:19;;;;;;;;;2465:10;2459:16;;;2451:54;;;;-1:-1:-1;;;;;2451:54:0;;2829:2:1;2451:54:0;;;2811:21:1;2868:2;2848:18;;;2841:30;2907:27;2887:18;;;2880:55;2952:18;;2451:54:0;2627:349:1;2451:54:0;2293:223;;;2540:4;2525:12;;;:19;;-1:-1:-1;;2554:20:0;2525:19;-1:-1:-1;;;;;2554:20:0;;;;;;;;;;;;;;-1:-1:-1;2610:10:0;;;;;;;;;;2634:15;;;;2525:19;2634:15;2630:342;;;2801:13;;2762:9;2772:14;;;;2762:25;;;;;;;;:::i;:::-;;;;;;;;;;;:35;;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;2630:342:0;;-1:-1:-1;2630:342:0;;2948:13;;2928:33;;:9;;2948:13;;2928:33;;2948:13;;2928:33;:::i;:::-;;;;-1:-1:-1;;2630:342:0;2108:870;;2071:907;:::o;3810:365::-;3870:21;;;3942:227;3963:9;:16;3959:20;;3942:227;;;4029:16;4004:9;4014:1;4004:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:41;4000:159;;;4084:9;4094:1;4084:12;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4065:41;;4143:1;4124:20;;4000:159;3981:3;;;;:::i;:::-;;;;3942:227;;;;3897:278;3810:365;:::o;1592:355::-;1684:11;;-1:-1:-1;;;;;1684:11:0;1670:10;:25;1649:112;;;;-1:-1:-1;;;;;1649:112:0;;2420:2:1;1649:112:0;;;2402:21:1;2459:2;2439:18;;;2432:30;2498:34;2478:18;;;2471:62;2569:10;2549:18;;;2542:38;2597:19;;1649:112:0;2218:404:1;1649:112:0;-1:-1:-1;;;;;1793:13:0;;;;;;:6;:13;;;;;;;;:19;;;;1792:20;1771:91;;;;-1:-1:-1;;;;;1771:91:0;;3183:2:1;1771:91:0;;;3165:21:1;3222:2;3202:18;;;3195:30;3261:26;3241:18;;;3234:54;3305:18;;1771:91:0;2981:348:1;1771:91:0;-1:-1:-1;;;;;1880:13:0;;;;;;:6;:13;;;;;:20;:25;1872:34;;;;;;-1:-1:-1;;;;;1916:13:0;;;;;1939:1;1916:13;;;;;;;;:24;1592:355::o;4366:144::-;4421:19;4470:9;4480:17;:15;:17::i;:::-;4470:28;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;4456:47;;4366:144;:::o;14:309:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:1;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:1:o;328:180::-;387:6;440:2;428:9;419:7;415:23;411:32;408:52;;;456:1;453;446:12;408:52;-1:-1:-1;479:23:1;;328:180;-1:-1:-1;328:180:1:o;4330:128::-;4370:3;4401:1;4397:6;4394:1;4391:13;4388:39;;;4407:18;;:::i;:::-;-1:-1:-1;4443:9:1;;4330:128::o;4463:135::-;4502:3;-1:-1:-1;;4523:17:1;;4520:43;;;4543:18;;:::i;:::-;-1:-1:-1;4590:1:1;4579:13;;4463:135::o;4603:184::-;4655:77;4652:1;4645:88;4752:4;4749:1;4742:15;4776:4;4773:1;4766:15;4792:184;4844:77;4841:1;4834:88;4941:4;4938:1;4931:15;4965:4;4962:1;4955:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"chairperson()": "601",
								"delegate(address)": "infinite",
								"giveRightToVote(address)": "21547",
								"proposals(uint256)": "1048",
								"vote(uint256)": "61806",
								"voters(address)": "1371",
								"winnerName()": "infinite",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1020,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1023,
									"end": 1033,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1009,
									"end": 1033,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1062,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1043,
									"end": 1073,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1105,
									"end": 1118,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1105,
									"end": 1125,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1102,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1101,
									"end": 1125,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1318,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1370,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1357,
									"end": 1373,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1402,
									"end": 1403,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1324,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1309,
									"end": 1419,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1127,
									"end": 1130,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1084,
									"end": 1430,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 1436,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 109,
									"end": 115,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 142,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 183,
									"end": 185,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 180,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 162,
									"end": 169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 158,
									"end": 181,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 154,
									"end": 186,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 199,
									"end": 200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 189,
									"end": 201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 151,
									"end": 203,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 151,
									"end": 203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 232,
									"end": 241,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 226,
									"end": 242,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 261,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 302,
									"end": 304,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 294,
									"end": 300,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 291,
									"end": 305,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 315,
									"end": 316,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 308,
									"end": 320,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 288,
									"end": 322,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 288,
									"end": 322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 356,
									"end": 362,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 345,
									"end": 354,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 341,
									"end": 363,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 331,
									"end": 363,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 401,
									"end": 408,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 394,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 390,
									"end": 392,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 386,
									"end": 399,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 382,
									"end": 409,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 421,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 413,
									"end": 425,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 372,
									"end": 427,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 372,
									"end": 427,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 452,
									"end": 454,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 446,
									"end": 455,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 474,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 470,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 467,
									"end": 477,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 464,
									"end": 500,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 464,
									"end": 500,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 480,
									"end": 498,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 527,
									"end": 529,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 525,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 519,
									"end": 530,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 559,
									"end": 561,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 553,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 622,
									"end": 624,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 618,
									"end": 625,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 613,
									"end": 615,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 609,
									"end": 611,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 605,
									"end": 616,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 601,
									"end": 626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 589,
									"end": 627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 677,
									"end": 683,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 665,
									"end": 675,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 662,
									"end": 684,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 657,
									"end": 659,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 645,
									"end": 655,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 642,
									"end": 660,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 639,
									"end": 685,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 636,
									"end": 708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 636,
									"end": 708,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 688,
									"end": 706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 724,
									"end": 726,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 717,
									"end": 739,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 774,
									"end": 792,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 808,
									"end": 823,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 843,
									"end": 854,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 873,
									"end": 884,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 869,
									"end": 889,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 866,
									"end": 899,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 912,
									"end": 913,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 909,
									"end": 910,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 902,
									"end": 914,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 863,
									"end": 916,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 863,
									"end": 916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 934,
									"end": 935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 925,
									"end": 935,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 925,
									"end": 935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 958,
									"end": 960,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 955,
									"end": 956,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 952,
									"end": 961,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1025,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1026,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 969,
									"end": 978,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1046,
									"end": 1058,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1078,
									"end": 1090,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 944,
									"end": 1100,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1119,
									"end": 1125,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 1131,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1175,
									"end": 1178,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1196,
									"end": 1213,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1246,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1243,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1236,
									"end": 1324,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1347,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1344,
									"end": 1345,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1337,
									"end": 1352,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1375,
									"end": 1379,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1365,
									"end": 1380,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1193,
									"end": 1390,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1417,
									"end": 1418,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1419,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1136,
									"end": 1425,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1430,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1559,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1560,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1583,
									"name": "PUSH",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1569,
									"end": 1584,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1593,
									"end": 1608,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1748,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1668,
									"end": 1669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1749,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1768,
									"end": 1772,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1765,
									"end": 1766,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1758,
									"end": 1773,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1792,
									"end": 1796,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1789,
									"end": 1790,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1782,
									"end": 1797,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1619,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 157,
									"end": 4512,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ab13ac14009a63047c0adc52725bb73b1a757400aff0507cc6644e984412ca164736f6c63430008070033",
									".code": [
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "609FF1BD"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "9E7B8D61"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "A3EC138D"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "E2BA53F0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "121B93F"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "13CF08B"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "2E4176CF"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "5C19A95C"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 157,
											"end": 4512,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 712,
											"end": 738,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 712,
											"end": 738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 677,
											"end": 732,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 659,
											"end": 733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 659,
											"end": 733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 632,
											"end": 650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 712,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 513,
											"end": 739,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 890,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 863,
											"end": 881,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 744,
											"end": 921,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 745,
											"end": 784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 745,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4182,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4161,
											"end": 4183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4220,
											"end": 4275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4215,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4072,
											"end": 4091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 4325,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3242,
											"end": 3252,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3235,
											"end": 3253,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3284,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1481,
											"name": "PUSH",
											"source": 1,
											"value": "486173206E6F20726967687420746F20766F7465000000000000000000000000"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3263,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3333,
											"end": 3345,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1730,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1712,
											"end": 1733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "416C726561647920766F7465642E000000000000000000000000000000000000"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1528,
											"end": 1866,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3324,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3403,
											"end": 3414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3425,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3571,
											"end": 3617,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 791,
											"end": 818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 791,
											"end": 818,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2148,
											"end": 2158,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2177,
											"end": 2190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2055,
											"end": 2076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2085,
											"end": 2115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "596F7520616C726561647920766F7465642E0000000000000000000000000000"
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1871,
											"end": 2213,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2169,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2231,
											"end": 2247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3577,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3646,
											"name": "PUSH",
											"source": 1,
											"value": "53656C662D64656C65676174696F6E20697320646973616C6C6F7765642E0000"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 3334,
											"end": 3688,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2223,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2310,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2300,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2364,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2459,
											"end": 2475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2829,
											"end": 2831,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2868,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "466F756E64206C6F6F7020696E2064656C65676174696F6E2E00000000000000"
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2887,
											"end": 2905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2880,
											"end": 2935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2627,
											"end": 2976,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2451,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2293,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2540,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2544,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2634,
											"end": 2649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2801,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2762,
											"end": 2814,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2948,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 2961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2630,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2978,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3870,
											"end": 3891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3963,
											"end": 3979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3959,
											"end": 3979,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4029,
											"end": 4045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4013,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4004,
											"end": 4045,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4094,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4084,
											"end": 4106,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4106,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4124,
											"end": 4144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 4000,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3897,
											"end": 4175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 4175,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1680,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2461,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2532,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206368616972706572736F6E2063616E206769766520726967687420"
										},
										{
											"begin": 2478,
											"end": 2496,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2478,
											"end": 2496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "746F20766F74652E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2616,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2597,
											"end": 2616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2218,
											"end": 2622,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1649,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1799,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1793,
											"end": 1812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1792,
											"end": 1812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3165,
											"end": 3186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3195,
											"end": 3225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3287,
											"name": "PUSH",
											"source": 1,
											"value": "54686520766F74657220616C726561647920766F7465642E0000000000000000"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3305,
											"end": 3323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2981,
											"end": 3329,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1771,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1886,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1880,
											"end": 1905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1872,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1592,
											"end": 1947,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4480,
											"end": 4495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4480,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4498,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4470,
											"end": 4503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4456,
											"end": 4503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4510,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 213,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 428,
											"end": 437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 415,
											"end": 438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 411,
											"end": 443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 456,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 453,
											"end": 454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 408,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 479,
											"end": 502,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 328,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4330,
											"end": 4458,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4330,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4391,
											"end": 4404,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4427,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4388,
											"end": 4427,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4407,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4443,
											"end": 4452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4458,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4463,
											"end": 4598,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4463,
											"end": 4598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4523,
											"end": 4540,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4540,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4563,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4520,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4520,
											"end": 4563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 4543,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4598,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4603,
											"end": 4787,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4603,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4652,
											"end": 4653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4752,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4742,
											"end": 4757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4773,
											"end": 4774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4792,
											"end": 4976,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4792,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4921,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4841,
											"end": 4842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4922,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4945,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4931,
											"end": 4946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4962,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4970,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"chairperson()": "2e4176cf",
							"delegate(address)": "5c19a95c",
							"giveRightToVote(address)": "9e7b8d61",
							"proposals(uint256)": "013cf08b",
							"vote(uint256)": "0121b93f",
							"voters(address)": "a3ec138d",
							"winnerName()": "e2ba53f0",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"chairperson\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"delegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"name\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"voteCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"vote\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerName\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"winnerName_\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implements voting process along with vote delegation\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Create a new ballot to choose one of 'proposalNames'.\",\"params\":{\"proposalNames\":\"names of proposals\"}},\"delegate(address)\":{\"details\":\"Delegate your vote to the voter 'to'.\",\"params\":{\"to\":\"address to which vote is delegated\"}},\"giveRightToVote(address)\":{\"details\":\"Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\",\"params\":{\"voter\":\"address of voter\"}},\"vote(uint256)\":{\"details\":\"Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\",\"params\":{\"proposal\":\"index of proposal in the proposals array\"}},\"winnerName()\":{\"details\":\"Calls winningProposal() function to get the index of the winner contained in the proposals array and then\",\"returns\":{\"winnerName_\":\"the name of the winner\"}},\"winningProposal()\":{\"details\":\"Computes the winning proposal taking all previous votes into account.\",\"returns\":{\"winningProposal_\":\"index of winning proposal in the proposals array\"}}},\"title\":\"Ballot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/3_Ballot.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/3_Ballot.sol\":{\"keccak256\":\"0x83fe6b367c140a5c7678c420da454c8c3866ccae12da149c5da3ce6568d29b6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5902f2f468a1f776b8f2cb9d584371af88e181954298af92402fca01d0dba3e7\",\"dweb:/ipfs/QmSUodhSvoorFL5m5CNqve8YvmuBpjCq17NbTf4GUX8ydw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "chairperson",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 23,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "voters",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Voter)11_storage)"
							},
							{
								"astId": 27,
								"contract": "contracts/3_Ballot.sol:Ballot",
								"label": "proposals",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(Proposal)16_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)16_storage)dyn_storage": {
								"base": "t_struct(Proposal)16_storage",
								"encoding": "dynamic_array",
								"label": "struct Ballot.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)11_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Ballot.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)11_storage"
							},
							"t_struct(Proposal)16_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Proposal",
								"members": [
									{
										"astId": 13,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 15,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)11_storage": {
								"encoding": "inplace",
								"label": "struct Ballot.Voter",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 6,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 8,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "delegate",
										"offset": 1,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 10,
										"contract": "contracts/3_Ballot.sol:Ballot",
										"label": "vote",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/3_Ballot.sol": {
				"ast": {
					"absolutePath": "contracts/3_Ballot.sol",
					"exportedSymbols": {
						"Ballot": [
							316
						]
					},
					"id": 317,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "70:86:0",
								"text": " @title Ballot\n @dev Implements voting process along with vote delegation"
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Ballot",
							"nameLocation": "166:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "weight",
											"nameLocation": "208:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "203:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "203:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "voted",
											"nameLocation": "268:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "263:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 5,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "263:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 8,
											"mutability": "mutable",
											"name": "delegate",
											"nameLocation": "330:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "322:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 7,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "322:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"mutability": "mutable",
											"name": "vote",
											"nameLocation": "376:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "371:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "371:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nameLocation": "187:5:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "180:240:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 16,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "607:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "599:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 12,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "599:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 15,
											"mutability": "mutable",
											"name": "voteCount",
											"nameLocation": "659:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 16,
											"src": "654:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 14,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "654:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "433:8:0",
									"nodeType": "StructDefinition",
									"scope": 316,
									"src": "426:280:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e4176cf",
									"id": 18,
									"mutability": "mutable",
									"name": "chairperson",
									"nameLocation": "727:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "712:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "712:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3ec138d",
									"id": 23,
									"mutability": "mutable",
									"name": "voters",
									"nameLocation": "778:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "745:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "753:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "745:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"id": 21,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 20,
												"name": "Voter",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 11,
												"src": "764:5:0"
											},
											"referencedDeclaration": 11,
											"src": "764:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 27,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "809:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 316,
									"src": "791:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "Proposal",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 16,
												"src": "791:8:0"
											},
											"referencedDeclaration": 16,
											"src": "791:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$16_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 26,
										"nodeType": "ArrayTypeName",
										"src": "791:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "999:437:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1009:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1023:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1023:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1009:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "1009:24:0"
											},
											{
												"expression": {
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 39,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1043:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 41,
															"indexExpression": {
																"id": 40,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1050:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1043:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1043:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1072:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1043:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "1043:30:0"
											},
											{
												"body": {
													"id": 68,
													"nodeType": "Block",
													"src": "1132:298:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 61,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 31,
																					"src": "1357:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 63,
																				"indexExpression": {
																					"id": 62,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 47,
																					"src": "1371:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1357:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 64,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1402:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 60,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "1324:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$16_storage_ptr_$",
																				"typeString": "type(struct Ballot.Proposal storage pointer)"
																			}
																		},
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "1324:94:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$16_memory_ptr",
																			"typeString": "struct Ballot.Proposal memory"
																		}
																	],
																	"expression": {
																		"id": 57,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "1309:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																			"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1309:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$16_storage_$returns$__$bound_to$_t_array$_t_struct$_Proposal_$16_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct Ballot.Proposal storage ref[] storage pointer,struct Ballot.Proposal storage ref)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1309:110:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 67,
															"nodeType": "ExpressionStatement",
															"src": "1309:110:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "1101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 51,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "1105:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1105:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1101:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 69,
												"initializationExpression": {
													"assignments": [
														47
													],
													"declarations": [
														{
															"constant": false,
															"id": 47,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1094:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 69,
															"src": "1089:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 46,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1089:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 49,
													"initialValue": {
														"hexValue": "30",
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1089:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1127:3:0",
														"subExpression": {
															"id": 54,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "1127:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 56,
													"nodeType": "ExpressionStatement",
													"src": "1127:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1084:346:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "825:125:0",
										"text": " @dev Create a new ballot to choose one of 'proposalNames'.\n @param proposalNames names of proposals"
									},
									"id": 71,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "proposalNames",
												"nameLocation": "984:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "967:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "967:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "967:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "966:32:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "999:0:0"
									},
									"scope": 316,
									"src": "955:481:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1639:308:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1670:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 80,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1684:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1670:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206368616972706572736f6e2063616e206769766520726967687420746f20766f74652e",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1709:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															},
															"value": "Only chairperson can give right to vote."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80126ce3251ab2b6e4ade14fe5b2bc11f593510cbe9e3550c09bff1989e33b95",
																"typeString": "literal_string \"Only chairperson can give right to vote.\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1649:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:112:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1649:112:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1792:20:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 86,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1793:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 88,
																	"indexExpression": {
																		"id": 87,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1800:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1793:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "1793:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686520766f74657220616c726561647920766f7465642e",
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1826:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															},
															"value": "The voter already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d39b1db28626750c546703ffb72f30ea3facdfed1bebd47408e22ef18a76ba2d",
																"typeString": "literal_string \"The voter already voted.\""
															}
														],
														"id": 85,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1771:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1771:91:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 95,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1880:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																			"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																		}
																	},
																	"id": 97,
																	"indexExpression": {
																		"id": 96,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "1887:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1880:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage",
																		"typeString": "struct Ballot.Voter storage ref"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1880:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1880:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 94,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1872:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1872:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1872:34:0"
											},
											{
												"expression": {
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 103,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "1916:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 105,
															"indexExpression": {
																"id": 104,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "1923:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1916:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1916:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1916:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1916:24:0"
											}
										]
									},
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1442:145:0",
										"text": " @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\n @param voter address of voter"
									},
									"functionSelector": "9e7b8d61",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nameLocation": "1601:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1625:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1616:15:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1639:0:0"
									},
									"scope": 316,
									"src": "1592:355:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "2108:870:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2132:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2118:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 117,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2118:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2118:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"baseExpression": {
														"id": 120,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2141:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 123,
													"indexExpression": {
														"expression": {
															"id": 121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2148:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2148:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2141:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2118:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2177:13:0",
															"subExpression": {
																"expression": {
																	"id": 126,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "2178:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "2178:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920766f7465642e",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2192:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															},
															"value": "You already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_657c6119c4ed567c60278fba62242b17c2fedf38962e651040dabfb3c9e15a5f",
																"typeString": "literal_string \"You already voted.\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2169:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2169:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 133,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2231:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 134,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2237:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2231:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c662d64656c65676174696f6e20697320646973616c6c6f7765642e",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2249:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															},
															"value": "Self-delegation is disallowed."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f37bf1aca80f8fa291a40f639db6aeaa1425ceb0e8c61c8648f0e2efa282a947",
																"typeString": "literal_string \"Self-delegation is disallowed.\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2223:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2223:59:0"
											},
											{
												"body": {
													"id": 164,
													"nodeType": "Block",
													"src": "2335:181:0",
													"statements": [
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 149,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "2349:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 150,
																			"name": "voters",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "2354:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																				"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																			}
																		},
																		"id": 152,
																		"indexExpression": {
																			"id": 151,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2361:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2354:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage",
																			"typeString": "struct Ballot.Voter storage ref"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "2354:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2349:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "2349:24:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 157,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 114,
																			"src": "2459:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 158,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2465:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2465:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2459:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "466f756e64206c6f6f7020696e2064656c65676174696f6e2e",
																		"id": 161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2477:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		},
																		"value": "Found loop in delegation."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8bd75322489f7ff7ab0b18506f4dcde935a32eca2a506b00f4d21b0becfa093c",
																			"typeString": "literal_string \"Found loop in delegation.\""
																		}
																	],
																	"id": 156,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2451:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "2451:54:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 140,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "2300:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 142,
															"indexExpression": {
																"id": 141,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "2307:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2300:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2300:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2331:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2323:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2323:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2300:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "WhileStatement",
												"src": "2293:223:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 166,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "2525:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2540:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2525:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2525:19:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 172,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "2554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "delegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2554:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 175,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2572:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2554:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2554:20:0"
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "delegate_",
														"nameLocation": "2598:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 206,
														"src": "2584:23:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 179,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 178,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "2584:5:0"
															},
															"referencedDeclaration": 11,
															"src": "2584:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"baseExpression": {
														"id": 181,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "2610:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 183,
													"indexExpression": {
														"id": 182,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2617:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2610:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2584:36:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "delegate_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "2634:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "voted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "2634:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "2831:141:0",
													"statements": [
														{
															"expression": {
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 197,
																		"name": "delegate_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "2928:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2928:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2948:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2948:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2928:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"nodeType": "ExpressionStatement",
															"src": "2928:33:0"
														}
													]
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "2630:342:0",
												"trueBody": {
													"id": 196,
													"nodeType": "Block",
													"src": "2651:174:0",
													"statements": [
														{
															"expression": {
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 187,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "2762:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 190,
																		"indexExpression": {
																			"expression": {
																				"id": 188,
																				"name": "delegate_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 180,
																				"src": "2772:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																					"typeString": "struct Ballot.Voter storage pointer"
																				}
																			},
																			"id": 189,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "vote",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 10,
																			"src": "2772:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2762:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "2762:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 192,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "2801:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																			"typeString": "struct Ballot.Voter storage pointer"
																		}
																	},
																	"id": 193,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "weight",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4,
																	"src": "2801:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2762:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 195,
															"nodeType": "ExpressionStatement",
															"src": "2762:52:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1953:113:0",
										"text": " @dev Delegate your vote to the voter 'to'.\n @param to address to which vote is delegated"
									},
									"functionSelector": "5c19a95c",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2080:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2097:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "2089:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2088:12:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2108:0:0"
									},
									"scope": 316,
									"src": "2071:907:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "3202:422:0",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3226:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "3212:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"id": 214,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 213,
																"name": "Voter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 11,
																"src": "3212:5:0"
															},
															"referencedDeclaration": 11,
															"src": "3212:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 220,
												"initialValue": {
													"baseExpression": {
														"id": 216,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3235:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$11_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 219,
													"indexExpression": {
														"expression": {
															"id": 217,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3242:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3242:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3235:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$11_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3212:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 222,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3271:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "3271:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3288:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3271:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "486173206e6f20726967687420746f20766f7465",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3291:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															},
															"value": "Has no right to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dc527e8fa9b76c996eb5eda9ddb749b21540f5509781b94e1e37f7027e7f50e",
																"typeString": "literal_string \"Has no right to vote\""
															}
														],
														"id": 221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3263:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3332:13:0",
															"subExpression": {
																"expression": {
																	"id": 230,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 215,
																	"src": "3333:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																		"typeString": "struct Ballot.Voter storage pointer"
																	}
																},
																"id": 231,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 6,
																"src": "3333:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f7465642e",
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															},
															"value": "Already voted."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_56aab92b7164a4ea72a098d2d95a5e763b71d07f265e8d46fc7240404017fa84",
																"typeString": "literal_string \"Already voted.\""
															}
														],
														"id": 229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3324:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "3324:40:0"
											},
											{
												"expression": {
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 236,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3374:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "3374:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3389:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3374:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 241,
												"nodeType": "ExpressionStatement",
												"src": "3374:19:0"
											},
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 242,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "3403:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 210,
														"src": "3417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3403:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "3403:22:0"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 248,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "3571:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 250,
															"indexExpression": {
																"id": 249,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3581:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3571:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 15,
														"src": "3571:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 252,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$11_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "3604:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3571:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "3571:46:0"
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "2984:177:0",
										"text": " @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\n @param proposal index of proposal in the proposals array"
									},
									"functionSelector": "0121b93f",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "3175:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "3185:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "3180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:15:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3202:0:0"
									},
									"scope": 316,
									"src": "3166:458:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "3897:278:0",
										"statements": [
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "winningVoteCount",
														"nameLocation": "3912:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "3907:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3907:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 266,
												"initialValue": {
													"hexValue": "30",
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3931:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3907:25:0"
											},
											{
												"body": {
													"id": 297,
													"nodeType": "Block",
													"src": "3986:183:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 278,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 27,
																			"src": "4004:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 280,
																		"indexExpression": {
																			"id": 279,
																			"name": "p",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4014:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4004:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$16_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 15,
																	"src": "4004:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 282,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "4029:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4004:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 296,
															"nodeType": "IfStatement",
															"src": "4000:159:0",
															"trueBody": {
																"id": 295,
																"nodeType": "Block",
																"src": "4047:112:0",
																"statements": [
																	{
																		"expression": {
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 284,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 264,
																				"src": "4065:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 285,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 27,
																						"src": "4084:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 287,
																					"indexExpression": {
																						"id": 286,
																						"name": "p",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 268,
																						"src": "4094:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4084:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$16_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 288,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 15,
																				"src": "4084:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4065:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 290,
																		"nodeType": "ExpressionStatement",
																		"src": "4065:41:0"
																	},
																	{
																		"expression": {
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 291,
																				"name": "winningProposal_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "4124:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 292,
																				"name": "p",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "4143:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4124:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 294,
																		"nodeType": "ExpressionStatement",
																		"src": "4124:20:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 271,
														"name": "p",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "3959:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 272,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3963:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3963:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3959:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"initializationExpression": {
													"assignments": [
														268
													],
													"declarations": [
														{
															"constant": false,
															"id": 268,
															"mutability": "mutable",
															"name": "p",
															"nameLocation": "3952:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 298,
															"src": "3947:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 267,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3947:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 270,
													"initialValue": {
														"hexValue": "30",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3947:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3981:3:0",
														"subExpression": {
															"id": 275,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3981:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ExpressionStatement",
													"src": "3981:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3942:227:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "3630:175:0",
										"text": " @dev Computes the winning proposal taking all previous votes into account.\n @return winningProposal_ index of winning proposal in the proposals array"
									},
									"functionSelector": "609ff1bd",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nameLocation": "3819:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3834:2:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "winningProposal_",
												"nameLocation": "3875:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3870:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3869:23:0"
									},
									"scope": 316,
									"src": "3810:365:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4446:64:0",
										"statements": [
											{
												"expression": {
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "winnerName_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "4456:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 307,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "4470:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$16_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 310,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 308,
																	"name": "winningProposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 300,
																	"src": "4480:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4480:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4470:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$16_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 311,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "4470:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4456:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 313,
												"nodeType": "ExpressionStatement",
												"src": "4456:47:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4181:180:0",
										"text": " @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\n @return winnerName_ the name of the winner"
									},
									"functionSelector": "e2ba53f0",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winnerName",
									"nameLocation": "4375:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4385:2:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "winnerName_",
												"nameLocation": "4429:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4421:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4420:21:0"
									},
									"scope": 316,
									"src": "4366:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 317,
							"src": "157:4355:0",
							"usedErrors": []
						}
					],
					"src": "37:4475:0"
				},
				"id": 0
			}
		}
	}
}